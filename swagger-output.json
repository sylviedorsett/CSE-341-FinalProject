{
  "swagger": "2.0",
  "info": {
    "title": "College Database",
    "description": "An application to get, update, and delete College Course and Instructor information from a database.",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "securityDefinitions": {
    "oAuthSample": {
      "type": "oauth2",
      "authorizationUrl": "http://localhost:3000/login",
      "flow": "implicit",
      "scopes": {
        "read_docs": "read your database collections",
        "write_docs": "modify collections in your database"
      }
    }
  },
  "tags": [
    {
      "name": "Courses",
      "description": "Methods to GET, POST, PUT, and DELETE courses."
    },
    {
      "name": "Instructors",
      "description": "Methods to GET, POST, PUT, and DELETE instructors."
    },
    {
      "name": "Students",
      "description": "Methods to GET, POST, PUT, and DELETE students."
    },
    {
      "name": "Gradebooks",
      "description": "Methods to GET, POST, PUT, and DELETE gradebooks."
    }
  ],
  "paths": {
    "/courses/": {
      "get": {
        "tags": ["Courses"],
        "summary": "This method retrieves all the courses in a collection.",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Courses"],
        "summary": "This method creates a new course to add to a collection.",

        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "courseTitle": {
                  "example": "any"
                },
                "courseId": {
                  "example": "any"
                },
                "instructor": {
                  "example": "any"
                },
                "classMax": {
                  "example": "any"
                },
                "currentEnrollment": {
                  "example": "any"
                },
                "startDate": {
                  "example": "any"
                },
                "endDate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "tags": ["Courses"],
        "summary": "This method retreives one course by its ID from a collection.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["Courses"],
        "summary": "This method updates a course's data.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "courseTitle": {
                  "example": "any"
                },
                "courseId": {
                  "example": "any"
                },
                "instructor": {
                  "example": "any"
                },
                "classMax": {
                  "example": "any"
                },
                "currentEnrollment": {
                  "example": "any"
                },
                "startDate": {
                  "example": "any"
                },
                "endDate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Courses"],
        "summary": "This method deletes a course from the collection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/instructors/": {
      "get": {
        "tags": ["Instructors"],
        "summary": "This method retrieves all the instructors in a collection.",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Instructors"],
        "summary": "This method creates a new instructor to add to a collection.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "department": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "tenure": {
                  "example": "any"
                },
                "course": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/instructors/{id}": {
      "get": {
        "tags": ["Instructors"],
        "summary": "This method retreives one instructor by its ID from a collection.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["Instructors"],
        "summary": "This method updates an instructor's data.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "department": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "tenure": {
                  "example": "any"
                },
                "course": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Instructors"],
        "summary": "This method deletes an instructor from the collection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gradebooks/": {
      "get": {
        "tags": ["Gradebooks"],
        "summary": "This method retrieves all the gradebooks in a collection.",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Gradebooks"],
        "summary": "This method creates a new gradebook to add to a collection.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "teacher": {
                  "example": "any"
                },
                "class": {
                  "example": "any"
                },
                "gpa": {
                  "example": "any"
                },
                "assignments": {
                  "example": ["any"]
                },
                "missingAssignments": {
                  "example": "any"
                },
                "absences": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gradebooks/{id}": {
      "get": {
        "tags": ["Gradebooks"],
        "summary": "This method retreives one gradebook by its ID from a collection.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Gradebooks"],
        "summary": "This method updates a gradebook's data.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "teacher": {
                  "example": "any"
                },
                "class": {
                  "example": "any"
                },
                "gpa": {
                  "example": "any"
                },
                "assignments": {
                  "example": "any"
                },
                "missingAssignments": {
                  "example": "any"
                },
                "absences": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Gradebooks"],
        "summary": "This method deletes a gradebook from the collection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/students/": {
      "get": {
        "tags": ["Students"],
        "summary": "This method retrieves all the students in a collection.",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Students"],
        "summary": "This method creates a new student to add to a collection.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "major": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "birthdate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "tags": ["Students"],
        "summary": "This method retreives one student by its ID from a collection.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Students"],
        "summary": "This method updates a student's data.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "major": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "birthdate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Students"],
        "summary": "This method deletes a student from the collection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Course": {
      "type": "object",
      "properties": {
        "courseTitle": {
          "type": "String"
        },
        "courseId": {
          "type": "string"
        },
        "instructor": {
          "type": "string"
        },
        "classMax": {
          "type": "integer",
          "format": "int64"
        },
        "currentEnrollment": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        }
      }
    },
    "Instructor": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "tenure": {
          "type": "boolean"
        },
        "course": {
          "type": "string"
        }
      }
    },
    "Student": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "major": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthdate": {
          "type": "string"
        }
      }
    },
    "Gradebook": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "teacher": {
          "type": "string"
        },
        "class": {
          "type": "string"
        },
        "gpa": {
          "type": "integer",
          "format": "int64"
        },
        "assignments": {
          "type": "array"
        },
        "missingAssignments": {
          "type": "integer",
          "format": "int64"
        },
        "absences": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
